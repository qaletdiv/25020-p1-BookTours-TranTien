const user = JSON.parse(localStorage.getItem("User")) || []; //Ghi nh·ªõ tr·∫°ng th√°i ƒëƒÉng nh·∫≠p, hi·ªán tr√™n trang ch·ªß, JSON.parse d√πng ƒë·ªÉ chuy·ªÉn chu·ªói JSON th√†nh object
console.log(user);
if (user.length !== 0) {
  const login = document.querySelector("#login");
  login.innerHTML = '<i class="fa-solid fa-circle-user"></i> T√†i Kho·∫£n T√¥i';
  login.setAttribute('href','myaccount.html')
}
const url = new URL(window.location.href); //l·∫•y to√†n b·ªô ƒë∆∞·ªùng d·∫´n v√† ph√¢n t√≠ch
const id = url.searchParams.get("id"); //l·∫•y ra gi√° tr·ªã c·ªßa tham s·ªë id tr√™n URL
console.log(id);

async function layData(api) {
  try {
    const response = await fetch(api);
    const data = await response.json();
    console.log(data);
    return data;
  } catch (error) {
    console.error("L·ªói Fetch API (async/await):", error);
    return [];
  }
}
function renderSanPhamChiTiet(product) {
  const productDiv = document.getElementById("product-detail");
  if (!productDiv) return;

  // H√†m helper ƒë·ªÉ t·∫°o HTML cho chi ti·∫øt gi√° (Included/Excluded)
  const renderPriceDetails = (details) => {
    let html = '';
    if (details && details.included && details.excluded) {
      html += `
        <div class="price-included" style="margin-bottom: 1.5rem;">
          <h4 style="color: green; margin-bottom: 0.5rem;"><i class="fa-solid fa-circle-check"></i> GI√Å TOUR BAO G·ªíM:</h4>
          <ul>
            ${details.included.map(item => `<li>${item}</li>`).join('')}
          </ul>
        </div>
        <div class="price-excluded">
          <h4 style="color: red; margin-bottom: 0.5rem;"><i class="fa-solid fa-circle-xmark"></i> GI√Å TOUR KH√îNG BAO G·ªíM:</h4>
          <ul>
            ${details.excluded.map(item => `<li>${item}</li>`).join('')}
          </ul>
        </div>
      `;
    }
    return html;
  };

  // H√†m helper ƒë·ªÉ t·∫°o HTML cho l·ªãch tr√¨nh (Schedule)
  const renderSchedule = (schedule) => {
    let html = '';
    if (schedule) {
      // Chuy·ªÉn object schedule th√†nh m·∫£ng c√°c c·∫∑p [key, value] ƒë·ªÉ l·∫∑p
      const scheduleEntries = Object.entries(schedule);
      html += '<ul>';
      scheduleEntries.forEach(([key, value], index) => {
        html += `
          <li style="margin-bottom: 1rem;">
            <b style="color: #007bff;">Ng√†y ${index + 1}:</b> ${value}
          </li>
        `;
      });
      html += '</ul>';
    }
    return html;
  };

  const renderPolicy = (policy) => {
    let html = '';
    if (policy) {
      html += `
        <div class="policy-booking" style="margin-bottom: 1rem;">
          <h4 style="color: #ff9900; margin-bottom: 0.5rem;"><i class="fa-solid fa-clipboard-list"></i> CH√çNH S√ÅCH ƒêƒÇNG K√ù:</h4>
          <p>${policy.booking}</p>
        </div>
        <div class="policy-cancellation" style="margin-bottom: 1rem;">
          <h4 style="color: #ff9900; margin-bottom: 0.5rem;"><i class="fa-solid fa-ban"></i> CH√çNH S√ÅCH H·ª¶Y TOUR:</h4>
          <p>${policy.cancellation}</p>
        </div>
        <div class="policy-notes">
          <h4 style="color: #ff9900; margin-bottom: 0.5rem;"><i class="fa-solid fa-circle-info"></i> L∆ØU √ù:</h4>
          <p>${policy.notes}</p>
        </div>
      `;
    }
    return html;
  };


  productDiv.innerHTML = `
        <div class="main-content">
          <section class="tour-general">
            <p class="tourId">
              <i class="fa-solid fa-ticket"></i> M√£ tour:
              <span style="font-weight: 600">MIEN TRUNGDANANG</span> </p>
            <div class="tour-name">
              <h2 class="tourName">
              ${product.name}
              </h2>
              <p>
                <span style="color: red; font-weight: 650; font-size: 1.75rem"
                  >${product.price.toLocaleString("vi-VN")}
                </span>
                <span style="color: red; font-weight: 650; font-size: 1.5rem"
                  >VNƒê</span
                >
              </p>
            </div>
            <div class="info">
              <p class="timing">${product.duration}</p>
              <p class="startdes">
                <i class="fa-solid fa-plane"></i> N∆°i kh·ªüi h√†nh:
                <span style="font-weight: 600">${product.departure}</span>
              </p>
            </div>
          </section>
          <section class="tour-image">
            <div class="image-1">
              <img
                class="img1"
                src="${product.images[0]}"
                alt="${product.name} - ·∫£nh 1"
              />
            </div>
            <div class="image-4">
              <img
                src="${product.images[1]}"
                alt="${product.name} - ·∫£nh 2"
              />
              <img
                src="${product.images[1]}"
                alt="${product.name} - ·∫£nh 3"
              />
              <img
                src="${product.images[1]}"
                alt="${product.name} - ·∫£nh 4"
              />
              <img
                src="${product.images[1]}"
                alt="${product.name} - ·∫£nh 5"
              />
            </div>
          </section>
          <section class="infomation-tour">
            
            <div class="general">
              <h2>T·ªîNG QUAN</h2>
              <p>${product.description}</p>
              
              <h3 style="margin-top: 1.5rem; color: #007bff;">ƒêI·ªÇM NH·∫§N CH∆Ø∆†NG TR√åNH</h3>
              <ul style="list-style-type: disc; padding-left: 20px;">
                ${product.highlights.map(item => `<li><b>${item.split(':').length > 1 ? item.split(':')[0] + ':' : ''}</b> ${item.split(':').length > 1 ? item.split(':')[1].trim() : item}</li>`).join('')}
              </ul>
              <hr style="margin: 20px 0;">

              <h2 style="color: #28a745;">L·ªäCH TR√åNH CHI TI·∫æT</h2>
              ${renderSchedule(product.schedule)}
              <hr style="margin: 20px 0;">

              <h2 style="color: #dc3545;">CHI TI·∫æT GI√Å TOUR</h2>
              ${renderPriceDetails(product.priceDetails)}
              <hr style="margin: 20px 0;">

              <h2 style="color: #6f42c1;">CH√çNH S√ÅCH V√Ä QUY ƒê·ªäNH</h2>
              ${renderPolicy(product.policy)}
            </div>
            <div class="booking">
              <div class="box-booking">
                <h3>Th√¥ng Tin C∆° B·∫£n</h3>
                <ul>
                  <li>Kh·ªüi h√†nh: ${product.startDate}</li>
                  <li>Th·ªùi gian: ${product.duration}</li>
                  <li>Ph∆∞∆°ng ti·ªán: ${product.departure.includes('s√¢n bay') || product.name.includes('Tour tr·ªçn g√≥i') ? 'M√°y Bay + Xe √ît√¥' : 'Xe √ît√¥'}</li>
                </ul>
                <p>
                  <span style="color: red; font-weight: 650; font-size: 2rem"
                    >${product.price.toLocaleString("vi-VN")}
                  </span>
                  <span style="color: red; font-weight: 650; font-size: 1.75rem"
                    >VNƒê</span
                  >
                </p>
                <button class="btn-tour" onclick='addToCart(${JSON.stringify(
                  product
                )})'>ƒê·∫∑t Ngay</button> 
              </div>
            </div>
          </section>
        </div>
          `;
}

// G·ªçi h√†m async ƒë·ªÉ fetch v√† x·ª≠ l√Ω s·∫£n ph·∫©m
layData(`http://localhost:3000/products/${id}`).then((product) =>
  renderSanPhamChiTiet(product)
);

const cart = JSON.parse(localStorage.getItem("cart")) || []; //Nghƒ©a l√† m·ªói l·∫ßn load trang, gi·ªè h√†ng s·∫Ω ƒë∆∞·ª£c kh·ªüi t·∫°o l·∫°i t·ª´ d·ªØ li·ªáu ƒë√£ l∆∞u tr∆∞·ªõc ƒë√≥.
const addToCart = (product) => { //Ta c√≥ h√†m t·ª´ onclick truy·ªÅn v√†o l√† {id: 1, name: "Tour ƒê√† N·∫µng", ...} hay product = {id: 1, name: "Tour ƒê√† N·∫µng", ...}
  console.log(product);
  let item = cart.find((p) => p.id === product.id); //t√¨m trong gi·ªè h√†ng c√≥ s·∫£n ph·∫©m n√†o c√≥ c√πng id v·ªõi s·∫£n ph·∫©m product ƒëang mu·ªën th√™m hay kh√¥ng. 
  if (!item) {
    cart.push({ ...product, quantity: 1 }); //Th√™m m·ªôt s·∫£n ph·∫©m m·ªõi v√†o gi·ªè h√†ng, d√πng ...product ƒë·ªÉ copy to√†n b·ªô th√¥ng tin s·∫£n ph·∫©m t·ª´ product v√† g√°n th√™m thu·ªôc t√≠nh quantity: 1 ƒë·ªÉ qu·∫£n l√Ω s·ªë l∆∞·ª£ng.
    console.log(cart);
  } else {
    item.quantity++; //n·∫øu c√≥ r·ªìi th√¨ th√™m 1
  }
  localStorage.setItem("cart", JSON.stringify(cart));
   alert("üéâ ƒê·∫∑t h√†ng th√†nh c√¥ng! S·∫£n ph·∫©m ƒë√£ ƒë∆∞·ª£c th√™m v√†o gi·ªè h√†ng.");
};

const updateCartCount = () => {
  const cart = JSON.parse(localStorage.getItem("cart")) || [];
  const total = cart.reduce((sum, item) => sum + item.quantity, 0);
  document.getElementById("cart-count").textContent = total;
};


updateCartCount();


const addCart = (product) => {
  let cart = JSON.parse(localStorage.getItem("cart")) || [];
  let item = cart.find((p) => p.id === product.id);
  if (!item) {
    cart.push({ ...product, quantity: 1 });
    alert("üõí ƒê·∫∑t h√†ng th√†nh c√¥ng!");
  } else {
    item.quantity++;
    alert("üõí TƒÉng s·ªë l∆∞·ª£ng s·∫£n ph·∫©m trong gi·ªè!");
  }
  localStorage.setItem("cart", JSON.stringify(cart));
  updateCartCount(); 
};

const toggleBtn = document.getElementById("toggle");
const header = document.querySelector("header");

toggleBtn.addEventListener("click", () => {
  header.classList.toggle("active");
});